{"version":3,"file":"static/js/Auth.dae741fc.chunk.js","mappings":"wNAYMA,GAAMC,E,QAAAA,IATW,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAIIC,GAAOC,EAAAA,EAAAA,IAAQT,G,6BCZ5B,EAAuB,mBAAvB,EAAkD,oB,SC8ElD,EAtEa,WACX,IAAMU,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,KAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAgC,WAAtBT,EAASU,SAcnBC,EAAkB,yCAAG,WAAMN,EAAcE,GAApB,uEACzBK,EAAAA,EAAAA,IAAgChB,EAAMS,EAAOE,GAC1CM,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACNZ,GAASa,EAAAA,EAAAA,IAAQ,CACfV,MAAOS,EAAKT,MACZW,GAAIF,EAAKG,UAGZC,OAAO,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC5BG,SAAQ,kBAAMxB,EAAS,QATD,2CAAH,wDAaxB,OACE,iBAAKyB,UAAWC,EAAhB,UACGf,GACC,gBAAKc,UAAWC,EAAhB,iFAIA,gBAAKD,UAAWC,EAAhB,iFAIAf,IAAW,kBAAOgB,KAAK,OAAOC,YAAY,mEAC5C,kBAAOD,KAAK,QAAQE,SAAU,SAACC,GAAD,OAAOtB,EAASsB,EAAEC,OAAOC,QAAQJ,YAAY,sDAC3E,kBAAOD,KAAK,WAAWE,SAAU,SAACC,GAAD,OAAOpB,EAAYoB,EAAEC,OAAOC,QAAQJ,YAAY,oFAChFjB,GACC,SAACsB,EAAA,EAAD,CAAQC,QAAS,kBAxCH,SAAC3B,EAAcE,IACjC0B,EAAAA,EAAAA,IAA4BrC,EAAMS,EAAOE,GACtCM,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACNZ,GAASa,EAAAA,EAAAA,IAAQ,CACfV,MAAOS,EAAKT,MACZW,GAAIF,EAAKG,UAGZC,OAAO,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC5BG,SAAQ,kBAAMxB,EAAS,QA+BCoC,CAAY7B,EAAOE,IAA1C,qBAEA,SAACwB,EAAA,EAAD,CAAQC,QAAS,kBAAMrB,EAAmBN,EAAOE,IAAjD,qBAEF,yBACGE,GACC,oGACgB,iBAAMuB,QAAS,kBAAMlC,EAAS,kBAA9B,4GAGhB,oGACgB,iBAAMkC,QAAS,kBAAMlC,EAAS,WAA9B","sources":["firebase.ts","webpack://food-store/./src/pages/Auth/Auth.module.scss?1648","pages/Auth/Auth.tsx"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD54kkG7PV8Pg2JInnRQztCDb_xW1kliK0\",\r\n  authDomain: \"food-store-af9ee.firebaseapp.com\",\r\n  projectId: \"food-store-af9ee\",\r\n  storageBucket: \"food-store-af9ee.appspot.com\",\r\n  messagingSenderId: \"629445607436\",\r\n  appId: \"1:629445607436:web:f9b1887202cb6b798a6e29\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"auth\":\"Auth_auth__s9AOp\",\"title\":\"Auth_title__7LXe0\"};","import { createUserWithEmailAndPassword, OAuthCredential, signInWithEmailAndPassword } from 'firebase/auth'\r\nimport React, { useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { auth } from '../../firebase'\r\nimport { useAppDispatch } from '../../hooks/reduxHook'\r\nimport { setUser } from '../../redux/slices/userSlice'\r\nimport Button from '../../ui/button/Button'\r\nimport styles from './Auth.module.scss'\r\n\r\nconst Auth = () => {\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const isLogin = location.pathname === '/login'\r\n\r\n  const handleLogin = (email:string, password:any) => {\r\n    signInWithEmailAndPassword (auth, email, password)\r\n      .then(({user}) => {\r\n        dispatch(setUser({\r\n          email: user.email,\r\n          id: user.uid,\r\n        }))\r\n      })\r\n      .catch (error => console.log(error)) \r\n      .finally(() => navigate('/'))\r\n  }\r\n\r\n  const handleRegistration = async(email:string, password:any) => {\r\n    createUserWithEmailAndPassword (auth, email, password)\r\n      .then(({user}) => {\r\n        dispatch(setUser({\r\n          email: user.email,\r\n          id: user.uid,\r\n        }))\r\n      })\r\n      .catch (error => console.log(error)) \r\n      .finally(() => navigate('/'))\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={styles.auth}>\r\n      {isLogin ?\r\n        <div className={styles.title}>\r\n          Авторизация\r\n        </div>\r\n        :\r\n        <div className={styles.title}> \r\n          Регистрация\r\n        </div>\r\n      }\r\n      {!isLogin && <input type='text' placeholder='Введите имя' />}\r\n      <input type='email' onChange={(e) => setEmail(e.target.value)} placeholder='Введите email' />\r\n      <input type='password' onChange={(e) => setPassword(e.target.value)} placeholder='Введите пароль' />\r\n      {isLogin ?\r\n        <Button onClick={() => handleLogin(email, password)}>Submit</Button>\r\n        :\r\n        <Button onClick={() => handleRegistration(email, password)}>Submit</Button>\r\n      }\r\n      <div>\r\n        {isLogin ? \r\n          <div>\r\n            Нет аккаунта? <span onClick={() => navigate('/registration')}>Зарегестрируйся</span>\r\n          </div>\r\n        : \r\n          <div>\r\n            Есть аккаунт? <span onClick={() => navigate('/login')}>Войти</span>\r\n          </div> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","navigate","useNavigate","location","useLocation","dispatch","useAppDispatch","useState","email","setEmail","password","setPassword","isLogin","pathname","handleRegistration","createUserWithEmailAndPassword","then","user","setUser","id","uid","catch","error","console","log","finally","className","styles","type","placeholder","onChange","e","target","value","Button","onClick","signInWithEmailAndPassword","handleLogin"],"sourceRoot":""}